version: '3.8'

services:
  # Main Application
  pias-backend:
    build: .
    container_name: pias-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://pias_user:${POSTGRES_PASSWORD}@postgres:5432/pias_db
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - WEAVIATE_URL=http://weaviate:8080
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      - postgres
      - redis
      - kafka
      - weaviate
      - influxdb
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - pias-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pias-postgres
    environment:
      POSTGRES_DB: pias_db
      POSTGRES_USER: pias_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pias-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pias-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pias-network
    restart: unless-stopped

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: pias-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pias-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: pias-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - pias-network
    restart: unless-stopped

  # Weaviate Vector Database
  weaviate:
    image: semitechnologies/weaviate:1.22.4
    container_name: pias-weaviate
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - pias-network
    restart: unless-stopped

  # InfluxDB Time Series Database
  influxdb:
    image: influxdb:2.7-alpine
    container_name: pias-influxdb
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: pias-org
      DOCKER_INFLUXDB_INIT_BUCKET: pias-metrics
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - pias-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  weaviate_data:
  influxdb_data:

networks:
  pias-network:
    driver: bridge
